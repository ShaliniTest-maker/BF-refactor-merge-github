name: üõ°Ô∏è Security Vulnerability Report
description: Report security vulnerabilities and compliance issues for comprehensive security review with automated scanning integration
title: "[SECURITY] "
labels: ["security", "vulnerability", "needs-triage"]
assignees: []
body:
  - type: markdown
    attributes:
      value: |
        # üö® Security Vulnerability Report
        
        **Enterprise Security Framework Integration**
        
        This security issue template is integrated with our comprehensive security scanning pipeline including:
        - **Bandit 1.7+** static security analysis for Python vulnerabilities
        - **Safety 3.0+** and **pip-audit 2.7+** dependency vulnerability scanning  
        - **Trivy 0.48+** container security scanning with critical severity blocking
        - **Flask-Talisman** security header enforcement and HTTPS validation
        - **Enterprise compliance validation** for SOC 2, ISO 27001, PCI DSS standards
        
        **Critical Security Requirements**
        - Authentication and authorization code security per Section 0.3.3
        - Input validation patterns and XSS prevention per Section 6.4.3
        - Cryptographic operations using industry-standard libraries per Section 6.4.1
        - Security gate enforcement with critical finding blocking per Section 6.6.2
        
        ---

  - type: dropdown
    id: security_category
    attributes:
      label: "Security Category"
      description: "Select the primary security category for this vulnerability"
      options:
        - "Authentication & Authorization"
        - "Input Validation & Injection"
        - "Cryptographic Failures"
        - "Security Misconfiguration"
        - "Vulnerable Dependencies"
        - "Container Security"
        - "Data Protection & Privacy"
        - "Security Headers & CORS"
        - "Session Management"
        - "Network Security"
        - "Compliance Violation"
        - "Security Gate Failure"
        - "Other"
      default: 0
    validations:
      required: true

  - type: dropdown
    id: severity_level
    attributes:
      label: "Severity Level"
      description: "Severity level aligned with enterprise security policy"
      options:
        - "CRITICAL - Immediate security risk, potential system compromise"
        - "HIGH - Significant security risk, requires urgent attention"
        - "MEDIUM - Moderate security risk, should be addressed soon"
        - "LOW - Minor security concern, address in next cycle"
      default: 0
    validations:
      required: true

  - type: dropdown
    id: owasp_category
    attributes:
      label: "OWASP Top 10 Classification"
      description: "Map vulnerability to OWASP Top 10 category for compliance tracking"
      options:
        - "A01 - Broken Access Control"
        - "A02 - Cryptographic Failures"
        - "A03 - Injection"
        - "A04 - Insecure Design"
        - "A05 - Security Misconfiguration"
        - "A06 - Vulnerable and Outdated Components"
        - "A07 - Identification and Authentication Failures"
        - "A08 - Software and Data Integrity Failures"
        - "A09 - Security Logging and Monitoring Failures"
        - "A10 - Server-Side Request Forgery (SSRF)"
        - "Not OWASP Top 10 Related"
      default: 10
    validations:
      required: true

  - type: input
    id: affected_component
    attributes:
      label: "Affected Component/Module"
      description: "Specific Flask component, module, or file affected"
      placeholder: "e.g., src/auth/authentication.py, Flask-Talisman configuration, JWT validation"
    validations:
      required: true

  - type: textarea
    id: vulnerability_description
    attributes:
      label: "Vulnerability Description"
      description: "Detailed description of the security vulnerability"
      placeholder: |
        Provide a comprehensive description including:
        - What the vulnerability is
        - How it could be exploited
        - What systems/data could be affected
        - Business impact assessment
      render: markdown
    validations:
      required: true

  - type: textarea
    id: steps_to_reproduce
    attributes:
      label: "Steps to Reproduce"
      description: "Detailed steps to reproduce the security issue"
      placeholder: |
        1. Navigate to...
        2. Perform action...
        3. Observe security vulnerability...
        
        **Include specific examples, payloads, or test cases**
      render: markdown
    validations:
      required: true

  - type: dropdown
    id: scanning_tool_detection
    attributes:
      label: "Security Scanning Tool Detection"
      description: "Which automated security tool detected this issue?"
      options:
        - "Bandit Static Security Analysis"
        - "Safety Dependency Vulnerability Scan"
        - "pip-audit Dependency Scanner"
        - "Trivy Container Security Scan"
        - "Semgrep Security Analysis"
        - "Manual Security Review"
        - "External Penetration Test"
        - "Security Audit"
        - "Not Detected by Automated Tools"
        - "Multiple Tools"
      default: 5
    validations:
      required: true

  - type: textarea
    id: bandit_context
    attributes:
      label: "Bandit Security Analysis Context"
      description: "If detected by Bandit, provide relevant scan results and context"
      placeholder: |
        **Bandit Finding Details:**
        - Test ID: (e.g., B201, B301, B501)
        - Confidence Level: (HIGH/MEDIUM/LOW)
        - File Path: 
        - Line Number:
        - Rule Description:
        
        **Bandit Output:**
        ```
        [Paste relevant Bandit scan output here]
        ```
        
        **Baseline Comparison:**
        - New finding or regression from baseline?
        - Impact on security baseline metrics
      render: markdown

  - type: textarea
    id: dependency_vulnerability_context
    attributes:
      label: "Dependency Vulnerability Context"
      description: "For dependency vulnerabilities, provide Safety/pip-audit scan context"
      placeholder: |
        **Vulnerable Dependency Details:**
        - Package Name: 
        - Current Version:
        - Vulnerable Versions:
        - CVE/Advisory ID:
        - CVSS Score:
        
        **Safety/pip-audit Output:**
        ```
        [Paste relevant vulnerability scan output here]
        ```
        
        **Remediation Information:**
        - Fixed Version Available:
        - Breaking Changes in Update:
        - Alternative Packages:
      render: markdown

  - type: textarea
    id: container_security_context
    attributes:
      label: "Container Security Context"
      description: "For container vulnerabilities, provide Trivy scan context"
      placeholder: |
        **Container Security Details:**
        - Base Image: python:3.11-slim
        - Vulnerability Type: (OS package, application dependency, config)
        - Affected Layers:
        
        **Trivy Scan Output:**
        ```
        [Paste relevant Trivy scan output here]
        ```
        
        **Container Hardening:**
        - Non-root user implementation
        - Security scanning results
        - Distroless/minimal base considerations
      render: markdown

  - type: dropdown
    id: compliance_impact
    attributes:
      label: "Enterprise Compliance Impact"
      description: "Which compliance standards are affected by this security issue?"
      multiple: true
      options:
        - "SOC 2 Type II"
        - "ISO 27001"
        - "PCI DSS"
        - "GDPR"
        - "SOX"
        - "OWASP Top 10"
        - "SANS Top 25"
        - "CIS Controls"
        - "NIST Cybersecurity Framework"
        - "No Compliance Impact"

  - type: dropdown
    id: security_gate_impact
    attributes:
      label: "Security Gate Impact"
      description: "Does this issue affect CI/CD security gates per Section 6.6.2?"
      options:
        - "BLOCKS - Critical finding blocking deployment"
        - "WARNING - High severity requiring security review"
        - "INFORMATIONAL - Medium/Low severity for awareness"
        - "NO IMPACT - Does not affect security gates"
      default: 3
    validations:
      required: true

  - type: textarea
    id: flask_security_context
    attributes:
      label: "Flask Security Framework Context"
      description: "Flask-specific security considerations and framework integration"
      placeholder: |
        **Flask Security Components Affected:**
        - [ ] Flask-Talisman security headers
        - [ ] Flask-Login authentication
        - [ ] Flask-Session management
        - [ ] Flask-CORS configuration
        - [ ] Flask-Limiter rate limiting
        - [ ] PyJWT token validation
        - [ ] Cryptography implementation
        - [ ] Input validation (marshmallow/pydantic)
        - [ ] Template security (Jinja2 autoescape)
        - [ ] Database security (PyMongo/Motor)
        
        **Security Configuration Issues:**
        - Debug mode configuration
        - Secret key security
        - HTTPS enforcement
        - Security header policies
        - Authentication middleware
      render: markdown

  - type: textarea
    id: authentication_authorization_context
    attributes:
      label: "Authentication & Authorization Security Context"
      description: "Auth-specific security review context per Section 0.3.3"
      placeholder: |
        **Authentication Components:**
        - [ ] PyJWT token validation security
        - [ ] Auth0 integration security
        - [ ] Session management security
        - [ ] Password security patterns
        - [ ] Multi-factor authentication
        - [ ] Token refresh mechanisms
        
        **Authorization Components:**
        - [ ] Role-based access control (RBAC)
        - [ ] Permission validation logic
        - [ ] Resource authorization checks
        - [ ] API endpoint protection
        - [ ] Administrative privilege controls
        
        **Security Review Requirements:**
        - Input validation pattern testing
        - Cryptographic operation validation
        - Enterprise compliance alignment
      render: markdown

  - type: textarea
    id: environment_configuration
    attributes:
      label: "Environment & Configuration"
      description: "Environment-specific security configuration context"
      placeholder: |
        **Environment:** (Development/Staging/Production)
        
        **Configuration Security:**
        - python-dotenv secret management
        - Environment variable security
        - Configuration file permissions
        - Secret rotation policies
        
        **Infrastructure Context:**
        - Container deployment security
        - Kubernetes security policies
        - Load balancer configuration
        - Network security controls
      render: markdown

  - type: textarea
    id: potential_impact
    attributes:
      label: "Potential Impact & Risk Assessment"
      description: "Comprehensive impact analysis for enterprise risk assessment"
      placeholder: |
        **Technical Impact:**
        - Data confidentiality risk
        - System integrity impact
        - Service availability impact
        - Performance implications
        
        **Business Impact:**
        - Customer data exposure risk
        - Regulatory compliance violations
        - Financial impact assessment
        - Reputation impact potential
        
        **Exploitation Complexity:**
        - Attack vector accessibility
        - Required privileges/access
        - User interaction requirements
        - Technical skill requirements
      render: markdown
    validations:
      required: true

  - type: textarea
    id: recommended_mitigation
    attributes:
      label: "Recommended Mitigation & Remediation"
      description: "Detailed remediation recommendations with enterprise context"
      placeholder: |
        **Immediate Mitigation Steps:**
        1. [Immediate actions to reduce risk]
        2. [Temporary workarounds if needed]
        3. [Monitoring/detection enhancements]
        
        **Long-term Remediation:**
        1. [Code changes required]
        2. [Configuration updates needed]
        3. [Security control improvements]
        4. [Testing and validation steps]
        
        **Security Enhancement Opportunities:**
        - Additional security controls
        - Improved monitoring/alerting
        - Process improvements
        - Security training needs
        
        **Dependency Updates Required:**
        ```
        # Current vulnerable versions
        package==vulnerable_version
        
        # Recommended secure versions
        package==secure_version
        ```
      render: markdown
    validations:
      required: true

  - type: textarea
    id: testing_validation
    attributes:
      label: "Security Testing & Validation"
      description: "Testing requirements to validate security fix effectiveness"
      placeholder: |
        **Security Testing Requirements:**
        - [ ] Unit tests for security fix validation
        - [ ] Integration tests for authentication/authorization
        - [ ] Security regression testing
        - [ ] Performance impact validation (‚â§10% variance requirement)
        
        **Automated Security Scanning:**
        - [ ] Bandit static analysis validation
        - [ ] Safety dependency scan verification
        - [ ] Trivy container security re-scan
        - [ ] Compliance validation testing
        
        **Manual Security Verification:**
        - [ ] Security code review
        - [ ] Penetration testing validation
        - [ ] Configuration security review
        - [ ] Enterprise policy compliance check
      render: markdown

  - type: dropdown
    id: notification_priority
    attributes:
      label: "Security Team Notification Priority"
      description: "Notification urgency for security team escalation"
      options:
        - "IMMEDIATE - Page security team (Critical/High severity)"
        - "URGENT - Notify within 4 hours (High severity)"
        - "STANDARD - Notify within 24 hours (Medium severity)"
        - "LOW - Standard notification cycle (Low severity)"
      default: 2
    validations:
      required: true

  - type: checkboxes
    id: incident_response
    attributes:
      label: "Incident Response Requirements"
      description: "Check if incident response procedures should be activated"
      options:
        - label: "Activate security incident response team"
        - label: "Notify stakeholders and management"
        - label: "Document in security incident log"
        - label: "Coordinate with legal/compliance teams"
        - label: "Prepare external disclosure if required"
        - label: "Schedule post-incident security review"

  - type: markdown
    attributes:
      value: |
        ---
        
        ## üìã Security Review Checklist
        
        **Security Team Actions:**
        - [ ] Security vulnerability validated and confirmed
        - [ ] Risk assessment completed and documented
        - [ ] Remediation timeline established
        - [ ] Security gate impact assessed
        - [ ] Compliance implications reviewed
        - [ ] Stakeholder communication completed
        
        **Development Team Actions:**
        - [ ] Security fix implemented and tested
        - [ ] Automated security scanning validation passed
        - [ ] Performance impact validated (‚â§10% variance)
        - [ ] Security code review completed
        - [ ] Documentation updated
        - [ ] Security baseline updated if needed
        
        **Deployment Readiness:**
        - [ ] Security gate clearance obtained
        - [ ] Compliance validation completed
        - [ ] Monitoring and alerting configured
        - [ ] Rollback procedures documented
        - [ ] Security team approval received
        
        ---
        
        **Enterprise Security Contact:**
        - Security Team: `security@company.com`
        - Security Hotline: `security-hotline@company.com`
        - Incident Response: `incident-response@company.com`
        
        **Automated Security Pipeline:**
        - **CI/CD Security Gates:** Integrated with GitHub Actions security workflow
        - **Continuous Scanning:** Bandit, Safety, Trivy automated scanning
        - **Compliance Monitoring:** SOC 2, ISO 27001, PCI DSS validation
        - **Performance Validation:** ‚â§10% variance requirement enforcement
        
        This security issue will be automatically integrated with our enterprise security monitoring and compliance tracking systems.