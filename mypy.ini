# mypy.ini - Static Type Checking Configuration
# 
# Enterprise-grade type safety configuration for Flask application migration
# from Node.js to Python. Implements strict type checking with zero unchecked
# code tolerance per Section 8.5.1 Type Safety Validation requirements.
#
# Configuration ensures 100% type check success requirement and comprehensive
# type annotation coverage across all Flask application components.

[mypy]
# Target Python version matching runtime environment per Section 3.1.1
python_version = 3.11

# Strict mode enforcement for enterprise-grade type safety
strict = True

# Comprehensive type checking options for zero unchecked code tolerance
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

# Additional strict mode settings for enterprise compliance
disallow_any_unimported = True
disallow_any_expr = False
disallow_any_decorated = True
disallow_any_explicit = False
disallow_any_generics = True
disallow_subclassing_any = True

# Error reporting configuration for comprehensive validation
show_error_codes = True
show_column_numbers = True
show_error_context = True
pretty = True

# Cache configuration for performance optimization
sqlite_cache = True
cache_dir = .mypy_cache

# Module discovery and import resolution
namespace_packages = True
ignore_missing_imports = False
follow_imports = normal

# Warnings configuration for comprehensive code quality
warn_incomplete_stub = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_return_any = True
warn_unreachable = True

# Strict optional handling for robust type safety
strict_optional = True
no_implicit_optional = True

# Error handling configuration
show_traceback = True
raise_exceptions = False

# Plugin configuration for Flask-specific type checking
plugins = 

# Global ignore patterns (minimal for strict enforcement)
# Note: Following enterprise policy of zero-tolerance for type issues,
# no modules are excluded from type checking requirements

# Per-module configuration for specific requirements
# All modules must maintain comprehensive type annotation coverage

[mypy-tests.*]
# Test modules maintain same strict requirements but allow some flexibility
# for test fixtures and mock objects while preserving type safety
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True

[mypy-*.migrations.*]
# Database migration modules (if any) maintain type safety requirements
# while allowing necessary dynamic operations
disallow_untyped_defs = True
disallow_incomplete_defs = True

# Third-party library stub configuration
# Libraries without type stubs must have types added or stubs created
# to maintain 100% type check success requirement

[mypy-gunicorn.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True